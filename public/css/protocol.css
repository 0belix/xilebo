@charset "UTF-8";

:root {
  --row-height: calc(99.5vh / 77);
  --cell-width: calc(99.9% / 81);
  --red: #F9C;
  --blue: #9CF;
  --white: #FFF;
  --yellow: #FF0;
  --light-yellow: #FFC; /* background-color for the driver name and number cells */
  --white-smoke: #F8F8FF; /* background-color for the score cells */
  --orange: #FFC000; /* background-color for the score cells */
  --purple: #CCC0D9; /* background-color for the time cells */
  --spectator-gray: #DDD9C3; /* background-color for the spectator cell */
  --gray: #D8D8D8; /* background-color for the empty cells */
  --black: #000; /* background-color for the team name cells */
  --light-blue: #C6D9F0; /* background-color for the rest */
  background-color: var(--light-blue);
}

.hide {
  display: none !important;
}

.containerFlex {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.containerFlex * {
  position: relative;
  flex-grow: 1;
  text-align: center;
  font-size: 1.5vw;
  overflow: hidden;
  white-space: nowrap;
}

.containerProtocol {
  display: flex;
  flex-direction: row;
}

.containerProtocol:last-of-type {
  font-size: 0.88vw;
  line-height: 0.88vw;
  height: calc(var(--row-height) * 1.5);
  background-color: var(--white-smoke);
  justify-content: center;
}

.containerProtocol  .row_height_1 {
  height: var(--row-height);
}

.containerProtocol  .cell_height_1 {
  height: calc(var(--row-height) * 1) !important;
  line-height: calc(var(--row-height) * 1) !important;
}

.containerProtocol  .cell_height_2 {
  height: calc(var(--row-height) * 2) !important;
  line-height: calc(var(--row-height) * 2) !important;
}

.containerProtocol div[class*='cell_'] {
  height: calc(var(--row-height) * 3);
  line-height: calc(var(--row-height) * 3);
}

.containerProtocol  .cell_height_4 {
  height: calc(var(--row-height) * 4) !important;
  line-height: calc(var(--row-height) * 4) !important;
}

.containerProtocol .cell_width_1 {
  flex-basis: var(--cell-width);
}

.containerProtocol .cell_width_2 {
  flex-basis: calc(var(--cell-width) * 2);
}

.containerProtocol .cell_width_3 {
  flex-basis: calc(var(--cell-width) * 3);
  background-color: var(--gray);
}

.containerProtocol .cell_width_4 {
  flex-basis: calc(var(--cell-width) * 4);
}

.containerProtocol .cell_width_8 {
  flex-basis: calc(var(--cell-width) * 8);
}

.containerProtocol .cell_width_9 {
  flex-basis: calc(var(--cell-width) * 9 + 0.02vw);
}

.containerProtocol .cell_width_10 {
  flex-basis: calc(var(--cell-width) * 10 + 0.02vw);
}

.containerProtocol .cell_width_19 {
  flex-basis: calc(var(--cell-width) * 19 + 0.02vw);
}

.containerProtocol .cell_width_20 {
  flex-basis: calc(var(--cell-width) * 20);
  text-align: left;
  text-indent: 0.5vw;
}

.containerProtocol .cell_width_48 {
  flex-basis: calc(var(--cell-width) * 48 + 0.6vw);
}

.containerProtocol .cell_width_50 {
  flex-basis: calc(var(--cell-width) * 50 + 0.7vw);
}

/*.containerFlex :nth-child(11) .cell_width_20,
.containerFlex :nth-child(12) .cell_width_20,
.containerFlex :nth-child(23) .cell_width_20,
.containerFlex :nth-child(24) .cell_width_20 {
  flex-basis: calc(var(--cell-width) * 20 - 0.01vw);
}*/

.containerFlex :nth-child(11) .cell_width_20::before,
.containerFlex :nth-child(23) .cell_width_20::before {
  content: "Lagl:\A0";
}

.containerFlex :nth-child(12) .cell_width_20::before,
.containerFlex :nth-child(24) .cell_width_20::before {
  content: "Assl:\A0";
}

.containerProtocol .rotate div {
  font-size: 0.9vw;
  transform: rotate(-90deg) translate(0, 0.8vw);
}

.containerFlex :nth-last-child(3) .rotate div {
  font-size: 1.3vw;
  transform: rotate(-90deg);
}

#spectator {
  background-color: var(--spectator-gray);
  border-left: solid 0.01vw black;
  border-top: solid 0.01vw black;
  border-right: solid 0.01vw black;
  font-size: 2vw;
  line-height: 2vw;
  text-indent: 2vw;
  letter-spacing: 0.5vw;
}

#spectator::before {
  position: absolute;
  top: 3%;
  left: 3%;
  content: "Publik:";
  font-size: 0.9vw;
  line-height: 0.9vw;
  text-indent: 0;
  letter-spacing: normal;
}

#track_record {
  text-align: right;
  font-size: 1vw;
  transform: translate(-2%, 20%);
}

#track_record::before {
  position: absolute;
  top: 3%;
  right: 2%;
  font-size: 0.9vw;
  line-height: 0.5vw;
  content: "BR";
}

.containerProtocol div[class*='cell_'] {
  border-left: solid 0.01vw black;
  border-top: solid 0.01vw black;
}

.border_left {
  border-left: solid 0.01vw black;
  border-top-style: none !important;
}

.border_top {
  border-left-color: transparent !important;
  border-top: solid 0.01vw black;
}

.border_transparent {
  border-left-color: transparent !important;
  border-top-color: transparent !important;
}

.border_none {
  border-left-style: none !important;
  border-top-style: none !important;
}

.border_thick {
  border-left-width: 0.1vw !important;
}

.containerProtocol .color_r {
  background-color: var(--red);
}

.containerProtocol .color_b {
  background-color: var(--blue);
}

.containerProtocol .color_lb {
  background-color: var(--light-blue);
}

.containerProtocol .color_y {
  background-color: var(--yellow);
}

.containerProtocol .color_ly {
  background-color: var(--light-yellow);
}

.containerProtocol .color_w {
  background-color: var(--white);
}

.containerProtocol .color_ws {
  background-color: var(--white-smoke);
}

.containerProtocol .color_o {
  background-color: var(--orange);
}

.containerProtocol .color_p {
  background-color: var(--purple);
}

.containerProtocol .color_0 {
  background-color: var(--black);
  color: white;
}

.containerProtocol .color_transparent {
  background-color: transparent;
}

.containerProtocol .color_r::before,
.containerProtocol .color_b::before,
.containerProtocol .color_y::before,
.containerProtocol .color_w::before {
  position: absolute;
  bottom: 3%;
  right: 6%;
  font-size: 0.9vw;
  line-height: 0.9vw;
}

.containerProtocol div[class*='lane_']::after {
  position: absolute;
  top: 3%;
  right: 7%;
  font-size: 0.9vw;
  line-height: 0.9vw;
}

.containerProtocol .color_r::before {
  content: "R";
}

.containerProtocol .color_b::before {
  content: "B";
}

.containerProtocol .color_y::before {
  content: "G";
}

.containerProtocol .color_w::before {
  content: "V";
}

.containerProtocol .lane_1::after {
  content: "1";
}

.containerProtocol .lane_2::after {
  content: "2";
}

.containerProtocol .lane_3::after {
  content: "3";
}

.containerProtocol .lane_4::after {
  content: "4";
}
